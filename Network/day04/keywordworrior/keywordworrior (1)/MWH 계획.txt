//게임화면에서의 이벤트처리
		/*
		텍스트필드(입력창)	>> cmd에서처럼 무한루프 안돌려도 된다!!!!!!!!!!!!!!
			String msg = getText();
			msg를 소켓으로 전달 >> 명령어나 상황에 따라 모드변경 >> 프로토콜
				일반메세지 #001
				명령메세지 #002
				게임중입력메세지 #003(타이머스레드가 돌아가는동안, 또는 타이머스레드중 3초동안)
				
		레디버튼 >> 타이머 스레드가 돌아가지 않을때만
		(어떻게 정보를 서버에 전달할? >> 무한루프가 아니니까 버튼눌렀을때 트리거메세지를 보내면된다.
			
		exit버튼 >> 타이머 스레드가 돌아가지 않을때만, 
			옵션페인을 출력 나가기 확인.
			System.exit(-1);
			확장>>예외처리를 할 수 있으면(한명이 접속을 끊었을 때 타이머스레드를 멈춘다)
		*/

		/* 
			서버에서 키보드 무한루프 안돌려도 됨.
			서버 > 클라, 클라 > 서버 정보교환은 메세지로만 한다
			각 메세지의 종류에 따라서 각자 클라이언트의 화면에 정보를 표현한다
			
			각 클라이언트가 레디상태가 되면, 3초후 서버에서 타이머스레드를 생성한다
			타이머스레드의 시간정보는 인트값으로 각 클라에 전달한다
			각 클라에서는 이 정보에 따라 시간라벨을 변화시킨다 ex) @003timeI
			3초간격으로 클라이언트의 모드를 변경시킬 수 있을까? 돌아가면서.... 턴으로...
				>> 스레드가 시작하고 1초(트리거,클1)>3초>1초(트리거,클2)>...1초(트리거,클4)>3초>1초(트리거,클1)
				>> 컬렉션에서 1>2>3>4>1>2.....이런식으로 꺼내서 트리거를 전달해줘야한다

			서버에 저장된 정답컬렉션과 #003메세지를 비교해야한다. >> OCM에서 처리가능?
			방법은 첫번째로 일치하는 인덱스찾기 메소드 
			>> -1이면 무시
			>> 정답이면 ex)@003붕어빵 으로 메세지를 보내 붕어빵을 정보라벨에 출력한다, 컬렉션에서 정답제거
				점수++, 이 점수를 각 클라에 보내준다

			타이머스레드는 180초만. 이 시간이 지나면 break
			하고 다시 스레드 생성 전 상태.
			..........
			
			우선 핵심적인 기능만 구현하자
			부가적인 기능은 그 이후

		*/